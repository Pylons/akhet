[app:myapp]
use = egg:{{project}}
reload_templates = true
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = true
default_locale_name = en
mako.directories = {{package}}:templates
mako.strict_undefined = true
{{if sqlalchemy}}
sqlalchemy.url = sqlite:///%(here)s/db.sqlite
{{endif}}
session.type = file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.key = {{project}}
session.secret = {{random_string}}

#cache
cache.regions = default_term, second, short_term, long_term
cache.type = ext:memcached
cache.url = 127.0.0.1:11211
cache.lock_dir = %(here)s/data/cache/lock
cache.second.expire = 1
cache.short_term.expire = 60
cache.default_term.expire = 300


[pipeline:main]
pipeline =
    egg:WebError#evalerror
    myapp

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 5000


# Begin logging configuration

[loggers]
keys = root, {{package_logger}}{{if sqlalchemy}}, sqlalchemy{{endif}}

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_{{package_logger}}]
level = DEBUG
handlers =
qualname = {{package}}


{{if sqlalchemy}}
[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)
{{endif}}

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
